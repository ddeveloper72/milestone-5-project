name: Django CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.10, 3.11, 3.12]

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Set up environment variables
      run: |
        echo "SECRET_KEY=test-secret-key-for-ci" >> $GITHUB_ENV
        echo "DEBUG=True" >> $GITHUB_ENV
        echo "DATABASE_URL=postgres://postgres:postgres@localhost:5432/test_db" >> $GITHUB_ENV
        echo "AWS_ACCESS_KEY_ID=test" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=test" >> $GITHUB_ENV
        echo "AWS_STORAGE_BUCKET_NAME=test" >> $GITHUB_ENV
        echo "AWS_S3_REGION_NAME=us-east-1" >> $GITHUB_ENV
        echo "USE_S3=False" >> $GITHUB_ENV
        echo "STRIPE_PUBLISHABLE=test" >> $GITHUB_ENV
        echo "STRIPE_SECRET=test" >> $GITHUB_ENV
        echo "EMAIL_ADDRESS=test@example.com" >> $GITHUB_ENV
        echo "EMAIL_PASSWORD=test" >> $GITHUB_ENV
        
    - name: Run Django system checks
      run: |
        python manage.py check
        
    - name: Run migrations
      run: |
        python manage.py migrate
        
    - name: Run tests
      run: |
        python manage.py test
        
    - name: Check for security issues
      run: |
        python manage.py check --deploy --fail-level WARNING

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Heroku
      uses: akhileshns/heroku-deploy@v3.12.14
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: "custom-drone-ddeveloper72"
        heroku_email: "duncan.niamh@gmail.com"
        usedocker: false